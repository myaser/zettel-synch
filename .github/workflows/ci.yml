name: CI

on:
  push:
    branches: [ main ]
  pull_request:


jobs:
  Build_n_Test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2.3.4
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
        version: v1.29

        # Optional: working directory, useful for monorepos
        # working-directory: somedir

        # Optional: golangci-lint command line arguments.
        # args: --issues-exit-code=0

        # Optional: show only new issues if it's a pull request. The default value is `false`.
        # only-new-issues: true

        # Optional: if set to true then the action will use pre-installed Go
        # skip-go-installation: true
    - name: test
      run: make test
    - name: upload coverage report
      uses: codecov/codecov-action@v1.2.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./coverage.txt # optional
        flags: unittests # optional
        name: codecov-umbrella # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
    - name: Set up docker
      uses: docker/setup-buildx-action@v1.1.1
      with:
        install: true
        driver: docker
  Deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - name: update goreportcard
      uses: creekorful/goreportcard-action@v1.0
    - name: heroku LOGIN
      uses: akhileshns/heroku-deploy@v3.8.9 
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "${{secrets.HEROKU_APP_NAME}}"
        heroku_email: "${{secrets.HEROKU_EMAIL}}"
        justlogin: true
    - name: dockerize
      run: |
        heroku container:login
        make package
        make push
    - name: deploy to heroku
      run: heroku container:release web -a ${{secrets.HEROKU_APP_NAME}}
  